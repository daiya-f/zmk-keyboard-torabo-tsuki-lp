#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    combos {
        compatible = "zmk,combos";

        bt_clear {
            bindings = <&bt BT_CLR>;
            key-positions = <28 29>;
            layers = <2>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer_0 {
            bindings = <
&none  &none           &none     &none     &none                 &none                                                &none        &none  &none      &none          &none      &none
&none  &kp Q           &kp W     &kp E     &kp R                 &kp T                                                &kp Y        &kp U  &kp I      &kp O          &kp P      &none
&none  &kp A           &kp S     &kp D     &kp F                 &kp G        &none             &none                 &kp H        &kp J  &kp K      &kp L          &kp SEMI   &none
&none  &kp Z           &kp X     &kp C     &kp V                 &kp B        &kp ESC           &kp TAB               &kp N        &kp M  &kp COMMA  &kp DOT        &kp MINUS  &none
&none  &kp LEFT_SHIFT  &kp LGUI  &kp LALT  &mt LCTRL LANGUAGE_2  &lt 1 SPACE  &lt 3 LANGUAGE_1  &mt RSHIFT BACKSPACE  &lt 2 ENTER  &none  &none      &kp RIGHT_ALT  &kp RCTRL  &none
            >;
        };

        layer_1 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                                         &trans                   &trans          &trans          &trans           &trans         &trans
&trans  &trans  &trans  &trans  &trans  &kp BACKSPACE                                  &mkp MB5                 &kp HOME        &kp END         &kp PAGE_UP      &kp PAGE_DOWN  &trans
&trans  &trans  &trans  &trans  &trans  &kp DELETE     &trans  &trans                  &mkp MB4                 &mkp LCLK       &kp UP_ARROW    &mkp RCLK        &mkp MCLK      &trans
&trans  &trans  &trans  &trans  &trans  &kp ENTER      &trans  &trans                  &trans                   &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans         &trans
&trans  &trans  &trans  &trans  &trans  &trans         &trans  &kp RG(RC(LEFT_ARROW))  &kp RG(RC(RIGHT_ARROW))  &trans          &trans          &trans           &trans         &trans
            >;
        };

        layer_2 {
            bindings = <
&trans  &trans           &trans             &trans    &trans      &trans                                &trans                 &trans       &trans         &trans            &trans     &trans
&trans  &kp EXCLAMATION  &kp DOUBLE_QUOTES  &kp HASH  &kp DOLLAR  &kp LBKT                              &kp RBKT               &kp PERCENT  &kp AMPERSAND  &kp SINGLE_QUOTE  &kp EQUAL  &trans
&trans  &kp QUESTION     &trans             &trans    &trans      &kp LEFT_PARENTHESIS  &trans  &trans  &kp RIGHT_PARENTHESIS  &kp MINUS    &kp PIPE       &kp SEMICOLON     &kp COLON  &trans
&trans  &trans           &trans             &trans    &trans      &kp LEFT_BRACE        &trans  &trans  &kp RIGHT_BRACE        &kp UNDER    &kp AT_SIGN    &kp BACKSLASH     &kp SLASH  &trans
&trans  &trans           &trans             &trans    &trans      &trans                &trans  &trans  &trans                 &trans       &trans         &trans            &trans     &trans
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans   &trans   &trans        &trans        &trans                      &trans            &trans     &trans         &trans     &trans      &trans
&trans  &kp F1   &kp F2   &kp F3        &kp F4        &kp F5                      &kp HOME          &kp PG_UP  &kp PAGE_DOWN  &kp END    &kp ESCAPE  &trans
&trans  &kp F6   &kp F7   &kp F8        &kp F9        &kp F10     &trans  &trans  &kp LEFT          &kp DOWN   &kp UP_ARROW   &kp RIGHT  &kp TAB     &trans
&trans  &kp F11  &kp F12  &out OUT_USB  &out OUT_BLE  &bt BT_NXT  &trans  &trans  &kp SINGLE_QUOTE  &kp DQT    &kp GRAVE      &kp TILDE  &kp PIPE    &trans
&trans  &trans   &trans   &trans        &kp DELETE    &kp TAB     &trans  &trans  &trans            &trans     &trans         &trans     &trans      &trans
            >;
        };
    };
};
