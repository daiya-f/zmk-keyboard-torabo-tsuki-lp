#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

// OS設定を日本語キーボードのまま使用するための変換定義

#define JP_DQUOTE       AT                // "
#define JP_AMPERSAND    CARET             // &
#define JP_QUOTE        AMPERSAND         // '
#define JP_EQUAL        UNDER             // =
#define JP_CARET        EQUAL             // ^
#define JP_YEN          0x89              // ¥
#define JP_PLUS         COLON             // +
#define JP_TILDE        PLUS              // ~
#define JP_PIPE         LS(0x89)          // |
#define JP_AT           LEFT_BRACKET      // @
#define JP_COLON        SINGLE_QUOTE      // :
#define JP_ASTERISK     DOUBLE_QUOTES     // *
#define JP_BACKQUOTE    LEFT_BRACE        // `
#define JP_UNDERSCORE   LS(0x87)          // _
#define JP_LBRACKET     RIGHT_BRACKET     // [
#define JP_RBRACKET     BACKSLASH         // ]
#define JP_LPAREN       ASTERISK          // (
#define JP_RPAREN       LEFT_PARENTHESIS  // )
#define JP_LBRACE       RIGHT_BRACE       // {
#define JP_RBRACE       PIPE              // }
#define JP_KANA         LANGUAGE_1        // かな
#define JP_EISU         LANGUAGE_2        // 英数
#define JP_HANZEN       GRAVE             // 半角/全角

/ {
    combos {
        compatible = "zmk,combos";

        bt_clear {
            bindings = <&bt BT_CLR>;
            key-positions = <28 29>;
            layers = <2>;
        };
    };

    behaviors {
        tap_dance_0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_0";
            #binding-cells = <0>;
            bindings = <&mt RIGHT_SHIFT BACKSPACE>, <&kp BACKSPACE>;
        };

        tap_dance_1: tap_dance_1 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_1";
            #binding-cells = <0>;
            bindings = <&lt 1 SPACE>, <&kp SPACE>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer_0 {
            bindings = <
&none  &none           &none     &none     &none                 &none                                         &none        &none  &none      &none          &none      &none
&none  &kp Q           &kp W     &kp E     &kp R                 &kp T                                         &kp Y        &kp U  &kp I      &kp O          &kp P      &none
&none  &kp A           &kp S     &kp D     &kp F                 &kp G         &none             &none         &kp H        &kp J  &kp K      &kp L          &kp SEMI   &none
&none  &kp Z           &kp X     &kp C     &kp V                 &kp B         &kp ESC           &kp TAB       &kp N        &kp M  &kp COMMA  &kp DOT        &kp MINUS  &none
&none  &kp LEFT_SHIFT  &kp LGUI  &kp LALT  &mt LCTRL LANGUAGE_2  &tap_dance_1  &lt 3 LANGUAGE_1  &tap_dance_0  &lt 2 ENTER  &none  &none      &kp RIGHT_ALT  &kp RCTRL  &none
            >;
        };

        layer_1 {
            bindings = <
&trans  &trans          &trans       &trans  &trans  &trans                                         &trans                   &trans          &trans          &trans           &trans         &trans
&trans  &bt BT_CLR_ALL  &bootloader  &trans  &trans  &kp BACKSPACE                                  &mkp MB5                 &kp HOME        &kp END         &kp PAGE_UP      &kp PAGE_DOWN  &trans
&trans  &bt BT_NXT      &trans       &trans  &trans  &kp DELETE     &trans  &trans                  &mkp MB4                 &mkp LCLK       &kp UP_ARROW    &mkp RCLK        &mkp MCLK      &trans
&trans  &bt BT_PRV      &trans       &trans  &trans  &kp ENTER      &trans  &trans                  &trans                   &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans         &trans
&trans  &trans          &trans       &trans  &trans  &trans         &trans  &kp RG(RC(LEFT_ARROW))  &kp RG(RC(RIGHT_ARROW))  &trans          &trans          &trans           &trans         &trans
            >;
        };

        layer_2 {
            bindings = <
&trans  &trans           &trans         &trans    &trans      &trans                           &trans           &trans             &trans            &trans            &trans        &trans
&trans  &kp EXCLAMATION  &kp JP_DQUOTE  &kp HASH  &kp DOLLAR  &kp JP_LBRACKET                  &kp JP_RBRACKET  &kp PERCENT        &kp JP_AMPERSAND  &kp JP_QUOTE      &kp JP_EQUAL  &trans
&trans  &kp QUESTION     &trans         &trans    &trans      &kp JP_LPAREN    &trans  &trans  &kp JP_RPAREN    &kp MINUS          &kp JP_PIPE       &kp SEMICOLON     &kp JP_COLON  &trans
&trans  &kp JP_YEN       &trans         &trans    &trans      &kp JP_LBRACE    &trans  &trans  &kp JP_RBRACE    &kp JP_UNDERSCORE  &kp JP_AT         &kp JP_BACKQUOTE  &kp SLASH     &trans
&trans  &trans           &trans         &trans    &trans      &trans           &trans  &trans  &trans           &trans             &trans            &trans            &trans        &trans
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans   &trans   &trans   &trans                  &trans      &trans  &trans  &trans  &trans           &trans
&trans  &kp F9  &kp F10  &kp F11  &kp F12  &trans                  &trans      &kp N7  &kp N8  &kp N9  &kp JP_EQUAL     &trans
&trans  &kp F5  &kp F6   &kp F7   &kp F8   &trans  &trans  &trans  &kp PERIOD  &kp N4  &kp N5  &kp N6  &kp JP_ASTERISK  &trans
&trans  &kp F1  &kp F2   &kp F3   &kp F4   &trans  &trans  &trans  &kp COMMA   &kp N1  &kp N2  &kp N3  &kp JP_PLUS      &trans
&trans  &trans  &trans   &trans   &trans   &trans  &trans  &trans  &kp N0      &trans  &trans  &trans  &trans           &trans
            >;
        };
    };
};
