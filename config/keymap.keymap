#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    combos {
        compatible = "zmk,combos";

        bt_clear {
            bindings = <&bt BT_CLR>;
            key-positions = <28 29>;
            layers = <2>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer_0 {
            bindings = <
&none  &none           &none     &none     &none                 &none                                                &none        &none  &none      &none          &none      &none
&none  &kp Q           &kp W     &kp E     &kp R                 &kp T                                                &kp Y        &kp U  &kp I      &kp O          &kp P      &none
&none  &kp A           &kp S     &kp D     &kp F                 &kp G        &none             &none                 &kp H        &kp J  &kp K      &kp L          &kp SEMI   &none
&none  &kp Z           &kp X     &kp C     &kp V                 &kp B        &kp ESC           &kp TAB               &kp N        &kp M  &kp COMMA  &kp DOT        &kp MINUS  &none
&none  &kp LEFT_SHIFT  &kp LGUI  &kp LALT  &mt LCTRL LANGUAGE_2  &lt 1 SPACE  &lt 3 LANGUAGE_1  &mt RSHIFT BACKSPACE  &lt 2 ENTER  &none  &none      &kp RIGHT_ALT  &kp RCTRL  &none
            >;
        };

        layer_1 {
            bindings = <
&trans  &trans          &trans  &trans  &trans  &trans                                         &trans                   &trans          &trans          &trans           &trans         &trans
&trans  &bt BT_CLR_ALL  &trans  &trans  &trans  &kp BACKSPACE                                  &mkp MB5                 &kp HOME        &kp END         &kp PAGE_UP      &kp PAGE_DOWN  &trans
&trans  &bt BT_NXT      &trans  &trans  &trans  &kp DELETE     &trans  &trans                  &mkp MB4                 &mkp MB1        &kp UP_ARROW    &mkp RCLK        &mkp MCLK      &trans
&trans  &bt BT_PRV      &trans  &trans  &trans  &kp ENTER      &trans  &trans                  &trans                   &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans         &trans
&trans  &trans          &trans  &trans  &trans  &trans         &trans  &kp RG(RC(LEFT_ARROW))  &kp RG(RC(RIGHT_ARROW))  &trans          &trans          &trans           &trans         &trans
            >;
        };

        layer_2 {
            bindings = <
&trans  &trans           &trans             &trans    &trans      &trans                                &trans                 &trans       &trans         &trans            &trans     &trans
&trans  &kp EXCLAMATION  &kp DOUBLE_QUOTES  &kp HASH  &kp DOLLAR  &kp LBKT                              &kp RBKT               &kp PERCENT  &kp AMPERSAND  &kp SINGLE_QUOTE  &kp EQUAL  &trans
&trans  &kp QUESTION     &trans             &trans    &trans      &kp LEFT_PARENTHESIS  &trans  &trans  &kp RIGHT_PARENTHESIS  &kp MINUS    &kp PIPE       &kp SEMICOLON     &kp COLON  &trans
&trans  &trans           &trans             &trans    &trans      &kp LEFT_BRACE        &trans  &trans  &kp RIGHT_BRACE        &kp UNDER    &kp AT_SIGN    &kp BACKSLASH     &kp SLASH  &trans
&trans  &trans           &trans             &trans    &trans      &trans                &trans  &trans  &trans                 &trans       &trans         &trans            &trans     &trans
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans   &trans   &trans   &trans                  &trans            &trans  &trans  &trans  &trans        &trans
&trans  &kp F9  &kp F10  &kp F11  &kp F12  &trans                  &trans            &kp N7  &kp N8  &kp N9  &kp EQUAL     &trans
&trans  &kp F5  &kp F6   &kp F7   &kp F8   &trans  &trans  &trans  &kp PERIOD        &kp N4  &kp N5  &kp N6  &kp ASTERISK  &trans
&trans  &kp F1  &kp F2   &kp F3   &kp F4   &trans  &trans  &trans  &kp SINGLE_QUOTE  &kp N1  &kp N2  &kp N3  &kp PLUS      &trans
&trans  &trans  &trans   &trans   &trans   &trans  &trans  &trans  &kp N0            &trans  &trans  &trans  &trans        &trans
            >;
        };
    };
};
